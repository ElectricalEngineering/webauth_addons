<?php

/**
 * @file webauth_addons.module
 * Add-Ons for the Stanford WebAuth module
 */

/**
 * Implements hook_init().
 */
function webauth_addons_init() {

  if(!\Drupal::moduleHandler()->moduleExists('webauth')): // Check for webauth module
    drupal_set_message(t('The Stanford WebAuth module must be enabled to use WebAuth Add-Ons.'), 'error');
    return FALSE;
  endif;

  // Load module includes
  module_load_include('inc', 'webauth_addons', 'includes/webauth_addons');
  module_load_include('inc', 'webauth_addons', 'includes/webauth_addons.form');
}

/**
 * Implements hook_help()
 * HELP!
 */
function webauth_addons_help($path, $arg) {

  switch ($path):
    case 'admin/help#webauth_addons':
    case 'admin/config/modules#description':
      $webauth_addons_desc = t('<p class="lead text-primary">A few add-ons for the Stanford WebAuth Module. <br />This version contains these additions :</p>');
      $webauth_addons_desc .= t('<dl><dt>Search filtering </dt><dd>Will not display intranet results unless the user is logged in with webauth.</dd>');
      $webauth_addons_desc .= t('<dt>New Configuration Option</dt><dd>Adds a configuration option in <i>Configuration -> People -> <a href="@account_url" title="Acount Settings" target="_blank">Account Settings</a></i> under <i>Registration and cancellation</i> for Stanford Only authentication</dd></dl>', array('@account_url' => \Drupal\Core\Url::fromRoute('entity.user.admin_form')));
      return $webauth_addons_desc;
      break;
  endswitch;

}

/**
 * Implements hook_permission()
 */
function webauth_addons_permission() {

  return array(
    'administrate webauth_addons' => array(
      'title' => t('Administrate WebAuth Add-Ons Settings'),
      'description' => t('Allow users to administer the WebAuth Add-Ons settings'),
    ),
    'view webauth addons debug' => array(
      'title' => t('View debugging information from webauth addons.'),
      'description' => t('View debugging information from webauth addons')
    )
  );

}

/**
 * Implements hook_access()
 */
function webauth_addons_access() {

  return \Drupal::currentUser()->hasPermission(array('administrate webauth_addons', 'view webauth addons debug'));

}

/**
 * @FIXME
 * This implementation of hook_menu() cannot be automatically converted because
 * it contains logic (i.e., branching statements, function calls, object
 * instantiation, etc.) You will need to convert it manually. Sorry!
 *
 * For more information on how to convert hook_menu() to Drupal 8's new routing
 * and linking systems, see https://api.drupal.org/api/drupal/core%21includes%21menu.inc/group/menu/8
 */


function webauth_addons_menu() {

  $items['admin/config/webauth/addons'] = array(
    'title' => t('WebAuth Add-ons'),
    'description' => t('Settings for the WebAuth add-ons module'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('webauth_addons_options'),
    'access arguments' => array('administrate webauth_addons'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;

}

/**
 * Configuration options menu
 * Set configuration options for
 * webauth_addons module
 */
function webauth_addons_options() {

  global $base_url;

  // @FIXME
// // @FIXME
// // This looks like another module's variable. You'll need to rewrite this call
// // to ensure that it uses the correct configuration object.
// $form['intranet_base'] = array(
//     '#title' => t('The base url of your intranet pages.'),
//     '#type' => 'textfield',
//     '#description' => t('<div><br />If your intranet pages reside at <code>@burl/intranet</code>, you would enter "<b>intranet</b>" here.  Defaults to "<b>intranet</b>".</div>', array('@burl' => $base_url) ),
//     '#default_value' =>variable_get('intranet_base', 'intranet'),
//     '#required' => TRUE,
//     '#prefix' => t('<p class="lead">Settings for WebAuth Add-Ons</p>'),
//   );


  $form['webauth_addons_role'] = array(
    '#title' => t('SUNet Role'),
    '#type' => 'select',
    '#options' => user_roles(),
    '#description' => t('The name of the SUNet Role for your site. (<i>Usually "SUNet User"</i>)<br />You can add and delete roles by going <a href="@roles" target="_blank" title="Modify roles">here</a>.', array('@roles'=> \Drupal\Core\Url::fromRoute('entity.user_role.edit_permissions_form'))),
    '#default_value' => \Drupal::config('webauth_addons.settings')->get('webauth_addons_role'),
    '#required' => TRUE,
  );

  $form['#validate'][] = 'webauth_addons_options_validate'; // Custom validation to strip out any special characters.

  return system_settings_form($form);

}

/**
 * Validation for the options menu
 * Strips all characters except a-z
 * '/intranet@-' becomes 'intranet'
 */
function webauth_addons_options_validate($form, &$form_state) {

  $intranet = \Drupal\Component\Utility\SafeMarkup::checkPlain(strtolower($form_state['values']['intranet_base']));

  $form_state['values']['intranet_base'] = preg_replace('/[^a-z0-9]+/', '', $intranet);

}
